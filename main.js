!function(){"use strict";var e="",t=e+"727b5baa123f981bf5e0.png",s=e+"ae1a976ddb506239e9f0.svg";class n{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}toggleButtonState(){this._toggleButtonState()}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e,t,s,n,r){this._id=e._id,this._name=e.name,this._link=e.link,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=n,this._handleLikeClick=r}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleLikeButton.bind(this)),this._cardDeleteButton.addEventListener("click",this._handleDeleteButton.bind(this)),this._cardImageElement.addEventListener("click",this._handleImageClick)}_handleLikeButton(){this._handleLikeClick(this._id,this._isLiked).then((()=>{this._isLiked=!this._isLiked,this._toggleLikeButton()})).catch((e=>console.error("Eror toggling like",e)))}_toggleLikeButton=()=>{this._cardLikeButton.classList.toggle("card__like-button_active",this._isLiked)};_handleDeleteButton(){this._handleDeleteClick(this)}removeCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._cardImageElement=this._element.querySelector(".card__image"),this._cardTextElement=this._element.querySelector(".card__text"),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTextElement.textContent=this._name,this._setEventListeners(),this._toggleLikeButton(),this._element}}class i{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickOutsideModal=this._handleClickOutsideModal.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleClickOutsideModal)}close(){this._popupElement.classList.add("modal_hide"),setTimeout((()=>{this._popupElement.classList.remove("modal_opened"),this._popupElement.classList.remove("modal_hide")}),200),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleClickOutsideModal)}_handleEscClose(e){"Escape"===e.key&&this._popupElement.classList.contains("modal_opened")&&this.close()}_handleClickOutsideModal(e){this._isClickOutsideModalContainer(e)&&this._popupElement.classList.contains("modal_opened")&&this.close()}_isClickOutsideModalContainer(e){const t=this._popupElement.querySelector(".modal__js-container").getBoundingClientRect(),s=e.clientX,n=e.clientY;return s<t.left||s>t.right||n<t.top||n>t.bottom}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}class o extends i{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._confirmButton=this._popupElement.querySelector(".modal__button_confirm-form"),this._submitBtnText=this._confirmButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._confirmButton.textContent=e?t:this._submitBtnText}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._form.reset()}open(){super.open()}}const a={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},l=document.getElementById("Avatar-image");document.getElementById("Avatar-edit-vector").src=s,l.src=t;const d=document.querySelector(".profile__edit-button"),c=document.querySelector("#profile-name-input"),u=document.querySelector("#profile-description-input"),h=document.querySelector("#edit-profile-form"),_=document.querySelector(".profile__add-button"),m=document.querySelector("#add-card-form"),p=new class extends i{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._captionElement=this._popupElement.querySelector(".modal__preview-title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._captionElement.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"});let E;new n(a,h).enableValidation();const v=new n(a,m);v.enableValidation();const f=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAllData(){return Promise.all([this.loadUserInfo(),this.getInitialCards()]).then((e=>{let[t,s]=e;return{user:t,cards:s}}))}loadUserInfo(){return this._request(`${this.baseUrl}/users/me`,{method:"GET",headers:this.headers})}getInitialCards(){return this._request(`${this.baseUrl}/cards`,{method:"GET",headers:this.headers})}updateUserInfo(e){return this._request(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})})}addCard(e){return this._request(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._request(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers})}likeCard(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers})}unlikeCard(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers})}updateUserAvatar(e){return this._request(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e.avatar})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c58369c4-dcd4-4208-8726-c10df21880b5","Content-Type":"application/json"}}),g=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:n}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:s,avatar:n}=e;this._nameElement.textContent=t,this._jobElement.textContent=s,this._avatarElement.src=n}}({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__avatar"}),S=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t),console.log("Section initialized with items:",this._items)}renderItems(e){console.log("Rendering items:",e),e.forEach((e=>{console.log("Rendering card:",e),this._renderer(e)}))}addItem(e){this._container.prepend(e)}removeCard(e){const t=this._container.querySelector(`[data-id="${e}"]`);t&&t.remove()}}({items:[],renderer:e=>{const t=y(e);S.addItem(t)}},".cards");console.log("Section instance:",S),f.getAllData().then((e=>{let{user:t,cards:s}=e;console.log("Initial user data:",t),console.log("Initial cards data:",s),S.renderItems(s),g.setUserInfo(t)})).catch((e=>console.error("Error loading data",e)));const b=new o({popupSelector:"#edit-avatar-modal",handleFormSubmit:e=>{const t={avatar:e.avatar};f.updateUserAvatar(t).then((e=>{g.setUserInfo(e),b.close()})).catch((e=>console.error("Error updating user avatar:",e)))}}),C=new o({popupSelector:"#edit-profile-modal",handleFormSubmit:e=>{const t={name:e.name,about:e.about};C.renderLoading(!0),f.updateUserInfo(t).then((e=>{g.setUserInfo(e),C.close()})).catch((e=>console.error("Error updating user info:",e))).finally((()=>{C.renderLoading(!1)}))}}),L=new o({popupSelector:"#add-card-modal",handleFormSubmit:e=>{const t={name:e.title,link:e.url};L.renderLoading(!0),f.addCard(t).then((e=>{if(e&&e.name&&e.link){const t=y(e);S.addItem(t),m.reset(),v.toggleButtonState(),L.close()}else console.error("Invalid card data:",e)})).catch((e=>console.error("Error adding new card:",e))).finally((()=>{L.renderLoading(!1)}))}}),k=new class extends i{constructor(e){let{popupSelector:t,handleConfirm:s}=e;super({popupSelector:t}),this._handleConfirm=s,this._confirmButton=this._popupElement.querySelector(".modal__button_delete-card"),this._defaultButtonText=this._confirmButton.textContent,this.setEventListeners()}setButtonText(e,t){const s=this._popupElement.querySelector(e);s&&(this._defaultButtonText||(this._defaultButtonText=s.textContent),s.textContent=t)}resetButtonText(e){const t=this._popupElement.querySelector(e);t&&this._defaultButtonText&&(t.textContent=this._defaultButtonText)}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this.setButtonText(this._confirmButton,"Saving..."),this._handleConfirm().then((()=>{this.close()})).catch((e=>{console.error("Error during confirmation:",e)})).finally((()=>{this.resetButtonText(this._confirmButton)}))}))}}({popupSelector:"#delete-card-modal",handleConfirm:()=>{E&&(function(e){const t=e._id;f.deleteCard(t).then((()=>{e.removeCard()})).catch((e=>console.error("Error deleting card:",e)))}(E),k.close())}});function y(e){const t=new r(e,"#card-template",(()=>{return t=e.name,s=e.link,void p.open({name:t,link:s});var t,s}),(()=>function(e){E=e,k.open()}(t)),B),s=t.getView();return console.log("Created card element:",s),s}function B(e,t){return t?f.unlikeCard(e):f.likeCard(e)}C.setEventListeners(),L.setEventListeners(),p.setEventListeners(),b.setEventListeners(),d.addEventListener("click",(function(){const e=g.getUserInfo();c.value=e.name,u.value=e.about,C.open()})),_.addEventListener("click",(()=>L.open())),l.addEventListener("click",(function(){const e=g.getUserInfo();l.value=e.avatar,b.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,