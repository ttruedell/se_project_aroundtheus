!function(){"use strict";class e{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}toggleButtonState(){this._toggleButtonState()}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleLikeButton),this._cardDeleteButton.addEventListener("click",this._handleDeleteButton),this._cardImageElement.addEventListener("click",this._handleImageClick)}_handleLikeButton=()=>{this._cardLikeButton.classList.toggle("card__like-button_active")};_handleDeleteButton=()=>{this._element.remove(),this._element=null};_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._cardImageElement=this._element.querySelector(".card__image"),this._cardTextElement=this._element.querySelector(".card__text"),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTextElement.textContent=this._name,this._setEventListeners(),this._element}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickOutsideModal=this._handleClickOutsideModal.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleClickOutsideModal)}close(){this._popupElement.classList.add("modal_hide"),setTimeout((()=>{this._popupElement.classList.remove("modal_opened"),this._popupElement.classList.remove("modal_hide")}),200),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleClickOutsideModal)}_handleEscClose(e){"Escape"===e.key&&this._popupElement.classList.contains("modal_opened")&&this.close()}_handleClickOutsideModal(e){this._isClickOutsideModalContainer(e)&&this._popupElement.classList.contains("modal_opened")&&this.close()}_isClickOutsideModalContainer(e){const t=this._popupElement.querySelector(".modal__js-container").getBoundingClientRect(),s=e.clientX,n=e.clientY;return s<t.left||s>t.right||n<t.top||n>t.bottom}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}class n extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input")}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._form.reset(),super.close()}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};document.getElementById("Avatar-image").src="727b5baa123f981bf5e0.png";const i=document.querySelector(".profile__edit-button"),r=document.querySelector("#profile-name-input"),l=document.querySelector("#profile-description-input"),a=document.querySelector("#edit-profile-form"),c=document.querySelector(".profile__add-button"),u=document.querySelector("#add-card-form"),d=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._captionElement=this._popupElement.querySelector(".modal__preview-title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._captionElement.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"});new e(o,a).enableValidation();const m=new e(o,u);m.enableValidation();const _=new n({popupSelector:"#edit-profile-modal",handleFormSubmit:e=>{p.setUserInfo({name:e.name,job:e.job})}}),h=new n({popupSelector:"#add-card-modal",handleFormSubmit:e=>{const t=v({name:e.title,link:e.url});E.addItem(t),u.reset(),m.toggleButtonState()}}),p=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:".profile__name",jobSelector:".profile__description"}),E=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosmite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=v(e);E.addItem(t)}},".cards");function v(e){return new t(e,"#card-template",(()=>{return t=e.name,s=e.link,void d.open({name:t,link:s});var t,s})).getView()}E.renderItems(),_.setEventListeners(),h.setEventListeners(),d.setEventListeners(),i.addEventListener("click",(function(){const e=p.getUserInfo();r.value=e.name,l.value=e.job,_.open()})),c.addEventListener("click",(()=>h.open()))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,